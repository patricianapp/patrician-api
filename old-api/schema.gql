# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddItemInput {
  artist: String!
  album: String!
  mbid: String!
  rating: String
}

input AuthCredentialsInput {
  username: String!
  password: String!
}

type CollectionItem {
  rating: String
  customName: String
  customArtist: String
  user: User!
  itemDetails: Item!
  createdDate: DateTime!
  updatedDate: DateTime!
  artist: String!
  albumName: String!
  mbid: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Item {
  mbid: String!
  rymId: Int!
  spotifyId: Float!
  name: String!
  disambiguation: String!
  artist: String!
}

type Mutation {
  signUp(credentials: AuthCredentialsInput!): String!
  addItem(item: AddItemInput!): CollectionItem!
  addRecipe(recipe: RecipeInput!): Recipe!
  rate(rate: RateInput!): Recipe!
}

type Query {
  debugInit: String!
  collection: [CollectionItem!]!
  recipe(recipeId: Int!): Recipe
  recipes: [Recipe!]!
  getUser(username: String!): User!
}

type Rate {
  value: Int!
  user: User!
  date: DateTime!
}

input RateInput {
  recipeId: ID!
  value: Int!
}

type Recipe {
  id: ID!
  title: String!
  description: String
  ratings: [Rate!]!
  author: User!
}

input RecipeInput {
  title: String!
  description: String
}

type User {
  username: String!
  email: String
  collection: [CollectionItem!]!
  followers: [User!]!
  following: [User!]!
}
